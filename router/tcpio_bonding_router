define(
  $WanNIC0  en5,
  $wan0tgt  10.0.0.2,
  $WanNIC1  en6,
  $wan1tgt  192.168.32.1,
  $LocNIC   bridge100,
  $arpLoc   192.168.87.0/24
)

AddressInfo(
  WanSrc0 $WanNIC0,
  wan0tgt $wan0tgt,
  WanSrc1 $WanNIC1,
  wan1tgt $wan1tgt,
  SrvGW   $srvgw,
  LocNIC  $LocNIC,
  arploc  $arpLoc
)

elementclass LocalNIC {$host, $hostnic, $arpnet|
  FromDevice($hostnic) -> c:: Classifier(12/0806 20/0001, 12/0806 20/0002, 12/0800, -);
  c[0] -> ARPResponder($arpnet $host:eth) -> q:: Queue -> ToDevice($hostnic);
  c[1] -> [1]aq:: ARPQuerier($host:ip, $host:eth) -> q;
  c[2] -> [0]output;
  c[3] -> Discard;
  input[0] -> aq;
  aq[1] -> q; 
}

elementclass GlobalNIC {$host, $hostnic, $arpnet, $gwip|
  input[0] -> SetIPAddress($gwip) -> LocalNIC($host, $hostnic, $arpnet) -> [0]output;
}

sat_nic0 :: GlobalNIC(WanSrc0, $WanNIC0, WanSrc0:ip, wan0tgt);
sat_nic1 :: GlobalNIC(WanSrc1, $WanNIC1, WanSrc1:ip, wan1tgt);
loc_nic :: LocalNIC(LocNIC, $LocNIC, arploc);

TimedSource(INTERVAL 1.0, DATA "0000") -> StoreData(0, \<0a000000>) ->beacon_t :: Tee()
-> UDPIPEncap(WanSrc0:ip, CltGWPort, SrvGW:ip, SrvGWProbe, CHECKSUM true)
-> sat_nic0;

sat_nic0 -> Strip(14)  
-> Strip(28) -> CheckIPHeader()
-> GetIPAddress(16)  //Set ip annotation for arp
-> loc_nic;

beacon_t[1] 
-> StoreData(0,\<14>)
-> UDPIPEncap(WanSrc1:ip, CltGWPort, SrvGW:ip, SrvGWProbe, CHECKSUM true)
-> sat_nic1;

sat_nic1 -> Strip(14)  
-> Strip(28) -> CheckIPHeader()
-> GetIPAddress(16)
-> loc_nic;

rrs :: RoundRobinSwitch();

loc_nic -> Strip(14) -> rrs;

rrs[0]
-> UDPIPEncap(WanSrc0:ip, CltGWPort, SrvGW:ip, SrvGWMain, CHECKSUM true)
-> sat_nic0;

rrs[1]
-> UDPIPEncap(WanSrc1:ip, CltGWPort, SrvGW:ip, SrvGWMain, CHECKSUM true)
-> sat_nic1;

Idle -> loc_nic;